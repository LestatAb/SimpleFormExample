@model IEnumerable<SimpleFormExample.Models.UserList>
@{
    ViewBag.Title = "Home Page";
}

<div class="row mb-4">
    <div class="col">
        <h5><i class="fa fa-info-circle me-1"></i>Añadir cliente</h5>
        <p>Añada un cliente para continuar</p>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
            <i class="fa fa-plus-circle"></i> Añadir cliente
        </button>
    </div>
</div>
<div class="row">
    <div class="col">
        <span>Mis compañias</span>
    </div>
</div>
<div class="row">
    <div class="col">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Pais</th>
                        <th scope="col">Entidad</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td scope="row" class="text-dark">
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </td>
                            <td class="text-dark">
                                @Html.DisplayFor(modelItem => item.Pais)
                            </td>
                            <td class="text-dark">
                                @Html.DisplayFor(modelItem => item.Tipo)
                            </td>
                            <td style="text-align:center;">
                                <button type="button" data-assigned-id="@item.Id" class="btn btn-danger" title="Delete" onclick="deleteUser(this)">
                                    <i class="fa fa-remove"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5><i class="fa fa-info-circle me-1"></i>Añadir cliente</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form class="needs-validation d-inline" novalidate id="userForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="validationCustom01">Nombre <span>*</span></label>
                            <input type="text" class="form-control" id="validationCustom01" placeholder="" required name="nombre">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="validationCustom02">Pais <span>*</span></label>
                            <select class="form-select" required id="validationCustom02" name="pais">
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="validationCustomUsername">Tipo de entidad <span>*</span></label>
                            <div>
                                <div class="d-inline-flex">
                                    <div class="form-check me-1">
                                        <input id="credit" name="tipo" type="radio" class="form-check-input" checked="" required="" value="Individuo">
                                        <label class="form-check-label" for="credit">Individuo</label>
                                    </div>
                                    <div class="form-check me-1">
                                        <input id="debit" name="tipo" type="radio" class="form-check-input" required="" value="Empresa">
                                        <label class="form-check-label" for="debit">Empresa</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="btnSubmit">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $.ajax({
                url: "/Home/GetUsersAsync",
                type: 'GET',
                dataType: "JSON",
                success: function (data) {
                    console.log(data)
                },
                error: function (jqXHR) {
                    console.log(jqXHR.statusText);
                },
            });
            //
            $.ajax({
                url: "/Home/GetCountriesAsync",
                type: 'GET',
                dataType: "JSON",
                success: function (data) {
                    console.log(data.data)
                    for (var i = 0; i < data.data.length; i++) {
                        $('#validationCustom02').append('<option value=' + data.data[i].Id + '>' + data.data[i].Nombre + '</option > ');
                    }
                },
                error: function (jqXHR) {
                    console.log(jqXHR.statusText);
                },
            });
            //
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        event.preventDefault()
                        event.stopPropagation()
                        if (!form.checkValidity()) {
                            form.classList.add('was-validated')
                            return;
                        }
                        $('#btnSubmit').attr('disabled', 'disabled');
                        var formData = $(this).serialize();
                        console.log(formData);
                        //return;
                        $.ajax({
                            url: "/Home/Save",
                            type: "POST",
                            data: formData,
                            dataType: "json",
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            success: function (response) {
                                var resp = JSON.stringify(response)
                                console.log(response)
                                if (response.data && response.data > 0) {
                                    window.location.reload();
                                }
                            },
                            error: function (response) {
                                alert('Error!');
                            },
                            complete: function () {
                                $('#btnSubmit').removeAttr('disabled');
                                form.classList.remove('was-validated')
                            }
                        })
                        //return false;
                    }, false)
                })
            //
        });
        function deleteUser(elem) {
            var id = $(elem).data('assigned-id');
            var del = confirm('Delete?');
            if (del) {
                $.ajax({
                    url: "/Home/Delete",
                    type: "POST",
                    data: "id=" + id,
                    dataType: "json",
                    success: function (response) {
                        if (response.data) {
                            window.location.reload();
                        }
                    },
                    error: function (response) {
                        alert('Error!');
                    }
                })
            }
        }
    </script>
}